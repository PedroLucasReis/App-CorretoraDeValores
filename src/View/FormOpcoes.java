/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Controller.EmpresaDAO;
import Controller.OfertasDAO;
import Controller.PropriedadeDAO;
import Controller.UsuarioDAO;
import Model.Empresa;
import Model.Ofertas;
import Model.Propriedade;
import Model.Usuario;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pedro
 */
public class FormOpcoes extends javax.swing.JInternalFrame {

    int id_emp, op;
    double vt;
    PLCRLobby pp;
    Empresa atu;
    /**
     * Creates new form FormOpcoes
     */
    public FormOpcoes() {
        initComponents();
        ConfigurarForm(0);
    }

    public FormOpcoes(int i, PLCRLobby back) {
        initComponents();
        ConfigurarForm(i);
        pp = back;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeral = new javax.swing.JPanel();
        lblNomeAcao = new javax.swing.JLabel();
        tbdMercadoNegociar = new javax.swing.JTabbedPane();
        pnlMercado = new javax.swing.JPanel();
        lblValorAtual = new javax.swing.JLabel();
        tglTipo = new javax.swing.JToggleButton();
        pnlInfo = new javax.swing.JPanel();
        pnlQuantidade = new javax.swing.JPanel();
        lblQuantidade = new javax.swing.JLabel();
        spnQuantidade = new javax.swing.JSpinner();
        pnlValorTotal = new javax.swing.JPanel();
        lblValorTotal = new javax.swing.JLabel();
        lblValorTotalNum = new javax.swing.JLabel();
        pnlSenha = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        pnlFinalizar = new javax.swing.JPanel();
        lblFinalizar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCompras = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tglTipo2 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        lblQuantidade2 = new javax.swing.JLabel();
        spnQuantidade1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        lblValor2 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        lblSenha2 = new javax.swing.JLabel();
        txtSenha2 = new javax.swing.JPasswordField();
        pnlFinalizar2 = new javax.swing.JPanel();
        lblFinalizar2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtValorTotal2 = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();

        pnlGeral.setBackground(new java.awt.Color(255, 255, 255));
        pnlGeral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));

        lblNomeAcao.setFont(new java.awt.Font("Game Of Squids", 0, 36)); // NOI18N
        lblNomeAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNomeAcao.setText("NOME");

        tbdMercadoNegociar.setBackground(new java.awt.Color(255, 255, 255));
        tbdMercadoNegociar.setToolTipText("");
        tbdMercadoNegociar.setFont(new java.awt.Font("Game Of Squids", 0, 12)); // NOI18N
        tbdMercadoNegociar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbdMercadoNegociarStateChanged(evt);
            }
        });
        tbdMercadoNegociar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdMercadoNegociarMouseClicked(evt);
            }
        });

        pnlMercado.setBackground(new java.awt.Color(255, 255, 255));
        pnlMercado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));

        lblValorAtual.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        lblValorAtual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValorAtual.setText("VALOR POR UNIDADE:");

        tglTipo.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        tglTipo.setText("TIPO");
        tglTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglTipoActionPerformed(evt);
            }
        });

        pnlInfo.setBackground(new java.awt.Color(255, 255, 255));
        pnlInfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlQuantidade.setBackground(new java.awt.Color(255, 255, 255));
        pnlQuantidade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQuantidade.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        lblQuantidade.setText("QUANTIDADE");

        spnQuantidade.setFont(new java.awt.Font("Game Of Squids", 0, 12)); // NOI18N
        spnQuantidade.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spnQuantidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQuantidadeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlQuantidadeLayout = new javax.swing.GroupLayout(pnlQuantidade);
        pnlQuantidade.setLayout(pnlQuantidadeLayout);
        pnlQuantidadeLayout.setHorizontalGroup(
            pnlQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuantidadeLayout.createSequentialGroup()
                .addGroup(pnlQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQuantidadeLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblQuantidade))
                    .addGroup(pnlQuantidadeLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        pnlQuantidadeLayout.setVerticalGroup(
            pnlQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuantidadeLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(lblQuantidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        pnlValorTotal.setBackground(new java.awt.Color(255, 255, 255));
        pnlValorTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblValorTotal.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        lblValorTotal.setText("VALOR TOTAL");

        lblValorTotalNum.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        lblValorTotalNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValorTotalNum.setText("R$: 0");

        javax.swing.GroupLayout pnlValorTotalLayout = new javax.swing.GroupLayout(pnlValorTotal);
        pnlValorTotal.setLayout(pnlValorTotalLayout);
        pnlValorTotalLayout.setHorizontalGroup(
            pnlValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlValorTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValorTotalNum, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlValorTotalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblValorTotal)
                .addGap(77, 77, 77))
        );
        pnlValorTotalLayout.setVerticalGroup(
            pnlValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValorTotalLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblValorTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValorTotalNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSenha.setBackground(new java.awt.Color(255, 255, 255));
        pnlSenha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SUA SENHA");

        javax.swing.GroupLayout pnlSenhaLayout = new javax.swing.GroupLayout(pnlSenha);
        pnlSenha.setLayout(pnlSenhaLayout);
        pnlSenhaLayout.setHorizontalGroup(
            pnlSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSenhaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlSenhaLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSenhaLayout.setVerticalGroup(
            pnlSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSenhaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        pnlFinalizar.setBackground(new java.awt.Color(255, 255, 255));
        pnlFinalizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));
        pnlFinalizar.setForeground(new java.awt.Color(255, 255, 255));
        pnlFinalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFinalizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlFinalizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlFinalizarMouseExited(evt);
            }
        });

        lblFinalizar.setFont(new java.awt.Font("Game Of Squids", 0, 24)); // NOI18N
        lblFinalizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFinalizar.setText("FINALIZAR");
        lblFinalizar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblFinalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFinalizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFinalizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblFinalizarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlFinalizarLayout = new javax.swing.GroupLayout(pnlFinalizar);
        pnlFinalizar.setLayout(pnlFinalizarLayout);
        pnlFinalizarLayout.setHorizontalGroup(
            pnlFinalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFinalizarLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(lblFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        pnlFinalizarLayout.setVerticalGroup(
            pnlFinalizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFinalizarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(pnlFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout pnlMercadoLayout = new javax.swing.GroupLayout(pnlMercado);
        pnlMercado.setLayout(pnlMercadoLayout);
        pnlMercadoLayout.setHorizontalGroup(
            pnlMercadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMercadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMercadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblValorAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlMercadoLayout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(tglTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMercadoLayout.setVerticalGroup(
            pnlMercadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMercadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValorAtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tglTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbdMercadoNegociar.addTab("MERCADO", pnlMercado);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));

        tbVendas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        tbVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbVendas);

        tbCompras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 51)));
        tbCompras.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        tbCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbCompras);

        jLabel1.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COMPRAS");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 51)));

        jLabel2.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("VENDAS");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        tglTipo2.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        tglTipo2.setText("comprar");
        tglTipo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglTipo2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQuantidade2.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        lblQuantidade2.setText("QUANTIDADE:");

        spnQuantidade1.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        spnQuantidade1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblQuantidade2)
                .addGap(18, 18, 18)
                .addComponent(spnQuantidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblQuantidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnQuantidade1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblValor2.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        lblValor2.setText("VALOR: R$");

        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblValor2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSenha2.setFont(new java.awt.Font("Game Of Squids", 0, 18)); // NOI18N
        lblSenha2.setText("SENHA:");

        txtSenha2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlFinalizar2.setBackground(new java.awt.Color(255, 255, 255));
        pnlFinalizar2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 153, 0), 2));
        pnlFinalizar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFinalizar2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlFinalizar2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlFinalizar2MouseExited(evt);
            }
        });

        lblFinalizar2.setFont(new java.awt.Font("Game Of Squids", 0, 24)); // NOI18N
        lblFinalizar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFinalizar2.setText("FINALIZAR");
        lblFinalizar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFinalizar2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFinalizar2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblFinalizar2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlFinalizar2Layout = new javax.swing.GroupLayout(pnlFinalizar2);
        pnlFinalizar2.setLayout(pnlFinalizar2Layout);
        pnlFinalizar2Layout.setHorizontalGroup(
            pnlFinalizar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFinalizar2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lblFinalizar2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFinalizar2Layout.setVerticalGroup(
            pnlFinalizar2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFinalizar2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFinalizar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtValorTotal2.setFont(new java.awt.Font("Game Of Squids", 0, 14)); // NOI18N
        txtValorTotal2.setText("VALOR TOTAL: R$");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtValorTotal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtValorTotal2)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(tglTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlFinalizar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tglTipo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlFinalizar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        tbdMercadoNegociar.addTab("NEGOCIAR", jPanel3);

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/CLOSE-131994911256789607.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlGeralLayout = new javax.swing.GroupLayout(pnlGeral);
        pnlGeral.setLayout(pnlGeralLayout);
        pnlGeralLayout.setHorizontalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbdMercadoNegociar)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(lblNomeAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlGeralLayout.setVerticalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblNomeAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblClose, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbdMercadoNegociar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spnQuantidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQuantidadeStateChanged
        int quant;
        quant = Integer.parseInt(spnQuantidade.getValue().toString());
        if(quant>0)
        {
            double valor;
            valor = quant * atu.getValor();
            vt = valor;
            lblValorTotalNum.setText("R$: " + valor);
        }
        else if(quant==0)
        {
            lblValorTotalNum.setText("R$:");
        }
    }//GEN-LAST:event_spnQuantidadeStateChanged

    private void tbdMercadoNegociarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdMercadoNegociarMouseClicked
            Empresa emp;
            emp = new EmpresaDAO().encontrarId(id_emp);
            lblNomeAcao.setText(emp.getNome());
            lblValorAtual.setText("VALOR POR UNIDADE: R$" + emp.getValor());
            atu = emp;
    }//GEN-LAST:event_tbdMercadoNegociarMouseClicked

    private void tglTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglTipoActionPerformed
        if(op==0)
        {
            op=1;
            tglTipo.setText("VENDER");
            Operacao(1,0);
        }
        else
        {
            op=0;
            tglTipo.setText("COMPRAR");
            Operacao(0,0);
        }
    }//GEN-LAST:event_tglTipoActionPerformed

    private void pnlFinalizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizarMouseEntered
       mouse(0,0);
    }//GEN-LAST:event_pnlFinalizarMouseEntered

    private void pnlFinalizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizarMouseExited
        mouse(1,0);
    }//GEN-LAST:event_pnlFinalizarMouseExited

    private void pnlFinalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizarMouseClicked
        confirm();
    }//GEN-LAST:event_pnlFinalizarMouseClicked

    private void lblFinalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizarMouseClicked
        confirm();
    }//GEN-LAST:event_lblFinalizarMouseClicked

    private void lblFinalizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizarMouseEntered
        mouse(0,0);
    }//GEN-LAST:event_lblFinalizarMouseEntered

    private void lblFinalizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizarMouseExited
        mouse(1,0);
    }//GEN-LAST:event_lblFinalizarMouseExited

    private void tbdMercadoNegociarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbdMercadoNegociarStateChanged
        tglTipo.setSelected(false);
        tglTipo2.setSelected(false);
        tglTipo.setText("COMPRAR");
        tglTipo2.setText("COMPRAR");
        tglTipo.setForeground(Color.GREEN);
        tglTipo2.setForeground(Color.GREEN);
        op=0;
    }//GEN-LAST:event_tbdMercadoNegociarStateChanged

    private void lblFinalizar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizar2MouseEntered
        mouse(0,1);
    }//GEN-LAST:event_lblFinalizar2MouseEntered

    private void lblFinalizar2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizar2MouseExited
       mouse(1,1);
    }//GEN-LAST:event_lblFinalizar2MouseExited

    private void tglTipo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglTipo2ActionPerformed
        if(op==0)
        {
            op=1;
            tglTipo2.setText("VENDER");
            Operacao(1,1);
        }
        else
        {
            op=0;
            tglTipo2.setText("COMPRAR");
            Operacao(0,1);
        }
    }//GEN-LAST:event_tglTipo2ActionPerformed

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_lblCloseMouseExited

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void txtValorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyReleased
        double tot;
        tot = Integer.parseInt(spnQuantidade.getValue().toString()) * Double.parseDouble(txtValor.getText());
        txtValorTotal2.setText("VALOR TOTAL: R$ " + tot);
    }//GEN-LAST:event_txtValorKeyReleased

    private void lblFinalizar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFinalizar2MouseClicked
        confirm2();
    }//GEN-LAST:event_lblFinalizar2MouseClicked

    private void pnlFinalizar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizar2MouseClicked
        confirm2();
    }//GEN-LAST:event_pnlFinalizar2MouseClicked

    private void pnlFinalizar2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizar2MouseEntered
        mouse(0,1);
    }//GEN-LAST:event_pnlFinalizar2MouseEntered

    private void pnlFinalizar2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFinalizar2MouseExited
        mouse(1,1);
    }//GEN-LAST:event_pnlFinalizar2MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblFinalizar;
    private javax.swing.JLabel lblFinalizar2;
    private javax.swing.JLabel lblNomeAcao;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblQuantidade2;
    private javax.swing.JLabel lblSenha2;
    private javax.swing.JLabel lblValor2;
    private javax.swing.JLabel lblValorAtual;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JLabel lblValorTotalNum;
    private javax.swing.JPanel pnlFinalizar;
    private javax.swing.JPanel pnlFinalizar2;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlMercado;
    private javax.swing.JPanel pnlQuantidade;
    private javax.swing.JPanel pnlSenha;
    private javax.swing.JPanel pnlValorTotal;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JSpinner spnQuantidade1;
    private javax.swing.JTable tbCompras;
    private javax.swing.JTable tbVendas;
    private javax.swing.JTabbedPane tbdMercadoNegociar;
    private javax.swing.JToggleButton tglTipo;
    private javax.swing.JToggleButton tglTipo2;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JPasswordField txtSenha2;
    private javax.swing.JTextField txtValor;
    private javax.swing.JLabel txtValorTotal2;
    // End of variables declaration//GEN-END:variables


    private void ConfigurarForm(int tip)
    {
        this.setTitle("Ações");
        this.setResizable(false);
        tglTipo.setSelected(false);
        Operacao(0,0);
        Operacao(0,1);
        op=0;
        if(tip>0)
        {
            Empresa emp;
            emp = new EmpresaDAO().encontrarId(tip);
            lblNomeAcao.setText(emp.getNome());
            lblValorAtual.setText("VALOR POR UNIDADE: R$" + emp.getValor());
            atu = emp;
            id_emp = tip;
        }
        configurarTabela();
        preencherTabelaOfertas(new OfertasDAO().pesquisarTipoId(0, tip), new OfertasDAO().pesquisarTipoId(1, tip));
    }
 
    private void Operacao(int i, int j)
    {
        if(j==0)
        {
            if(i==0)
            {
                 tglTipo.setText("COMPRAR");
                 tglTipo.setForeground(Color.GREEN);
                 lblValorTotal.setForeground(Color.GREEN);
                 lblValorTotalNum.setForeground(Color.GREEN);
                 lblFinalizar.setForeground(Color.GREEN);
            }
            else
            {
                tglTipo.setText("VENDER");
                tglTipo.setForeground(Color.RED);
                lblValorTotal.setForeground(Color.RED);
                lblValorTotalNum.setForeground(Color.RED);
                lblFinalizar.setForeground(Color.RED);
            }
        }
        else
        {
            if(i==0)
            {
                 tglTipo2.setText("COMPRAR");
                 tglTipo2.setForeground(Color.GREEN);
                 lblFinalizar2.setForeground(Color.GREEN);
            }
            else
            {
                tglTipo2.setText("VENDER");
                tglTipo2.setForeground(Color.RED);
                lblFinalizar2.setForeground(Color.RED);
            }
        }
        
    }
    
    private void mouse(int tipo, int aba)
    {
        if(aba==0)
        {
            if(op==0)
            {
              if(tipo==0)
                {

                    pnlFinalizar.setBackground(Color.GREEN);
                    lblFinalizar.setForeground(Color.WHITE);

                }
                else
                {
                    pnlFinalizar.setBackground(Color.WHITE);
                    lblFinalizar.setForeground(Color.GREEN);
                }  
            }
            else
            {
                if(tipo==0)
                {

                    pnlFinalizar.setBackground(Color.RED);
                    lblFinalizar.setForeground(Color.WHITE);

                }
                else
                {
                    pnlFinalizar.setBackground(Color.WHITE);
                    lblFinalizar.setForeground(Color.RED);
                }
            }
        }
        else
        {
            if(op==0)
            {
              if(tipo==0)
                {

                    pnlFinalizar2.setBackground(Color.GREEN);
                    lblFinalizar2.setForeground(Color.WHITE);

                }
                else
                {
                    pnlFinalizar2.setBackground(Color.WHITE);
                    lblFinalizar2.setForeground(Color.GREEN);
                }  
            }
            else
            {
                if(tipo==0)
                {

                    pnlFinalizar2.setBackground(Color.RED);
                    lblFinalizar2.setForeground(Color.WHITE);

                }
                else
                {
                    pnlFinalizar2.setBackground(Color.WHITE);
                    lblFinalizar2.setForeground(Color.RED);
                }
            }
        }
        
        
    }

    
    private void confirm()
    {
        if(Integer.parseInt(spnQuantidade.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(
                    null,
                    "A quantidade deve ser maior que 0",
                    "Quantidade",
                    JOptionPane.ERROR_MESSAGE
                );
        }
        else
        {
            if(txtSenha.getPassword().length<10)
            {
                JOptionPane.showMessageDialog(
                        null,
                        "A senha deve ter no minimo 10 caracteres",
                        "Operação",
                        JOptionPane.ERROR_MESSAGE
                    );

            }
            else
            {
                if (new UsuarioDAO().login(pp.getDoc(), new String(txtSenha.getPassword()))){

                    //login realizado com sucesso!
                    Usuario us = new UsuarioDAO().pesquisarCpfSenha(pp.getDoc(), new String(txtSenha.getPassword()));
                    double tot;
                    tot = Integer.parseInt(spnQuantidade.getValue().toString()) * atu.getValor();
                    if(us.getSaldo() < tot && op==0)
                    {
                        JOptionPane.showMessageDialog(
                                null,
                                "SALDO INSUFICIENTE",
                                "SALDO",
                                JOptionPane.ERROR_MESSAGE
                            );
                    }
                    else
                    {
                        Propriedade pro = new Propriedade();
                        pro.setId_empresa(id_emp);
                        pro.setCpf_user(pp.getDoc());
                        pro.setQuantidade(Integer.parseInt(spnQuantidade.getValue().toString()));
                        pro.setValor_uni(atu.getValor());
                        PropriedadeDAO prodao = new PropriedadeDAO();
                        int resul = prodao.veri(pro, op);
                        if(resul>=1)
                        {
                            if(op==0)
                            {
                                us.setSaldo(us.getSaldo()-(atu.getValor()* Integer.parseInt(spnQuantidade.getValue().toString())));
                                JOptionPane.showMessageDialog(
                                    null,
                                    "COMPRA EFETIVADA!.",
                                    "PLCR",
                                    JOptionPane.INFORMATION_MESSAGE
                                );

                            }
                            else
                            {
                                us.setSaldo(us.getSaldo()+(atu.getValor()* Integer.parseInt(spnQuantidade.getValue().toString())));
                                JOptionPane.showMessageDialog(
                                    null,
                                    "VENDA EFETIVADA!.",
                                    "PLCR",
                                    JOptionPane.INFORMATION_MESSAGE
                                );
                            }
                            new UsuarioDAO().atualizar(us);
                            pp.atualizar( new String(txtSenha.getPassword()));
                            this.dispose();
                        }
                        else
                        {
                            if(resul == -1)
                            {
                                JOptionPane.showMessageDialog(
                                    null,
                                    "Ocorreu um erro.",
                                    "PLCR",
                                    JOptionPane.ERROR_MESSAGE
                                );
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(
                                    null,
                                    "VOCÊ NÃO POSSUI ESSA QUANTIDAE DE AÇÕES",
                                    "PLCR",
                                    JOptionPane.ERROR_MESSAGE
                                );
                            }
                        }
                    }


                }
            }
        }
        
    }
    
    private void confirm2()
    {
        if(Integer.parseInt(spnQuantidade1.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(
                    null,
                    "A quantidade deve ser maior que 0",
                    "Quantidade",
                    JOptionPane.ERROR_MESSAGE
                );
        }
        else
        {
            if(txtSenha2.getPassword().length<10)
            {
                JOptionPane.showMessageDialog(
                        null,
                        "A senha deve ter no minimo 10 caracteres",
                        "Operação",
                        JOptionPane.ERROR_MESSAGE
                    );

            }
            else
            {
                if (new UsuarioDAO().login(pp.getDoc(), new String(txtSenha.getPassword()))){

                    //login realizado com sucesso!
                    Usuario us = new UsuarioDAO().pesquisarCpfSenha(pp.getDoc(), new String(txtSenha.getPassword()));
                    double tot;
                    tot = Integer.parseInt(spnQuantidade.getValue().toString()) * Double.parseDouble(txtValor.getText());
                    List<Ofertas> lista2 = new OfertasDAO().pesquisarCpfIdTipo(pp.getDoc(), id_emp, op);
                    List<Propriedade> lista3 = new PropriedadeDAO().pesquisarCpfId(pp.getDoc(), id_emp);
                    int tot2=0, tot3=0, tot4;
                    for(Ofertas ofe2 : lista2)
                    {
                        tot2=tot2+ofe2.getQuantidade();
                    }
                    for(Propriedade propr : lista3)
                    {
                        tot3=tot3+propr.getQuantidade();
                    }
                    tot4=tot3-tot2;
                    if(Integer.parseInt(spnQuantidade.getValue().toString())>tot4 && op==1)
                    {
                        JOptionPane.showMessageDialog(
                                null,
                                "VOCÊ SÓ PODE VENDER "+tot+" AÇÕES DESSA EMPRESA",
                                "QUANTIDADE",
                                JOptionPane.ERROR_MESSAGE
                            );
                    }
                    else if(us.getSaldo() < tot && op==0)
                    {
                        JOptionPane.showMessageDialog(
                                null,
                                "SALDO INSUFICIENTE",
                                "SALDO",
                                JOptionPane.ERROR_MESSAGE
                            );
                    }
                    else
                    {
                        Propriedade pro = new Propriedade();
                        pro.setId_empresa(id_emp);
                        pro.setCpf_user(pp.getDoc());
                        pro.setQuantidade(Integer.parseInt(spnQuantidade1.getValue().toString()));
                        pro.setValor_uni(Double.parseDouble(txtValor.getText()));
                        List<Ofertas> lista;
                        if(op==0)
                        {
                            lista = new OfertasDAO().pesquisarTipoId(1, id_emp);
                        }
                        else
                        {
                            lista = new OfertasDAO().pesquisarTipoId(0, id_emp);
                        }
                        if(lista!=null)
                        {
                            for(Ofertas ofe : lista)
                            {
                                if(ofe.getQuantidade() > 0 && pro.getQuantidade()!=0)
                                {
                                    if(ofe.getValor()==pro.getValor_uni())
                                    {
                                        if(op==0)
                                        {
                                            
                                            if(ofe.getQuantidade() >= pro.getQuantidade() && pro.getQuantidade()!=0)
                                            {
                                                Usuario usu = new UsuarioDAO().pesquisarCpf(ofe.getCpf_user());
                                                usu.setSaldo(usu.getSaldo()+(pro.getQuantidade()*pro.getValor_uni()));
                                                new UsuarioDAO().atualizar(usu);
                                                usu = new UsuarioDAO().pesquisarCpf(pp.getDoc());
                                                usu.setSaldo(usu.getSaldo()-(pro.getQuantidade()*pro.getValor_uni()));
                                                new UsuarioDAO().atualizar(usu);
                                                ofe.setQuantidade(ofe.getQuantidade()-pro.getQuantidade());
                                                new OfertasDAO().atualizar(ofe);
                                                if(new PropriedadeDAO().encontrarValorUni(pro)==true)
                                                {
                                                    new PropriedadeDAO().atualizar(pro, op);
                                                }
                                                else
                                                {
                                                    new PropriedadeDAO().inserir(pro);
                                                }
                                                lista3 = new PropriedadeDAO().pesquisarCpfId(ofe.getCpf_user(), id_emp);
                                                for(Propriedade prop2 : lista3)//venda
                                                {
                                                    Propriedade prop3 = prop2;
                                                    if(prop2.getQuantidade()<pro.getQuantidade())
                                                    {
                                                       pro.setQuantidade(pro.getQuantidade()-prop2.getQuantidade()); 
                                                       prop2.setQuantidade(0);
                                                    }
                                                    else
                                                    {
                                                        prop2.setQuantidade(prop2.getQuantidade()-pro.getQuantidade());
                                                        pro.setQuantidade(0);
                                                    }
                                                   new PropriedadeDAO().troca(prop2, prop3.getQuantidade());
                                                }
                                               
                                                
                                            }
                                            else
                                            {
                                                Usuario usu = new UsuarioDAO().pesquisarCpf(ofe.getCpf_user());
                                                int quant = pro.getQuantidade();
                                                pro.setQuantidade(ofe.getQuantidade());
                                                usu.setSaldo(usu.getSaldo()+(pro.getQuantidade()*pro.getValor_uni()));
                                                new UsuarioDAO().atualizar(usu);
                                                usu = new UsuarioDAO().pesquisarCpf(pp.getDoc());
                                                usu.setSaldo(usu.getSaldo()-(pro.getQuantidade()*pro.getValor_uni()));
                                                new UsuarioDAO().atualizar(usu);
                                                if(new PropriedadeDAO().encontrarValorUni(pro)==true)
                                                {
                                                    new PropriedadeDAO().atualizar(pro, op);
                                                }
                                                else
                                                {
                                                    new PropriedadeDAO().inserir(pro);
                                                }
                                                ofe.setQuantidade(0);
                                                new OfertasDAO().atualizar(ofe);
                                                pro.setQuantidade(quant-pro.getQuantidade());
                                                
                                            }
                                            
                                        }
                                        else
                                        {
                                            if(new PropriedadeDAO().encontrarValorUni(pro)==true)
                                            {
                                                if(ofe.getQuantidade() >= pro.getQuantidade() && pro.getQuantidade()!=0)
                                                {
                                                    Usuario usu = new UsuarioDAO().pesquisarCpf(ofe.getCpf_user());
                                                    usu.setSaldo(usu.getSaldo()-(pro.getQuantidade()*pro.getValor_uni()));
                                                    new UsuarioDAO().atualizar(usu);
                                                    usu = new UsuarioDAO().pesquisarCpf(pp.getDoc());
                                                    usu.setSaldo(usu.getSaldo()+(pro.getQuantidade()*pro.getValor_uni()));
                                                    new UsuarioDAO().atualizar(usu);
                                                    ofe.setQuantidade(ofe.getQuantidade()-pro.getQuantidade());
                                                    new OfertasDAO().atualizar(ofe);
                                                    new PropriedadeDAO().atualizar(pro, op);
                                                    pro.setQuantidade(0);
                                                    for(Propriedade prop2 : lista3)//venda
                                                    {
                                                        Propriedade prop3 = prop2;
                                                        if(prop2.getQuantidade()<pro.getQuantidade())
                                                        {
                                                           pro.setQuantidade(pro.getQuantidade()-prop2.getQuantidade()); 
                                                           prop2.setQuantidade(0);
                                                        }
                                                        else
                                                        {
                                                            prop2.setQuantidade(prop2.getQuantidade()-pro.getQuantidade());
                                                            pro.setQuantidade(0);
                                                        }
                                                       new PropriedadeDAO().troca(prop2, prop3.getQuantidade());
                                                    }
                                                }
                                                else
                                                {
                                                    Usuario usu = new UsuarioDAO().pesquisarCpf(ofe.getCpf_user());
                                                    int quant = pro.getQuantidade();
                                                    pro.setQuantidade(ofe.getQuantidade());
                                                    usu.setSaldo(usu.getSaldo()-(pro.getQuantidade()*pro.getValor_uni()));
                                                    new UsuarioDAO().atualizar(usu);
                                                    usu = new UsuarioDAO().pesquisarCpf(pp.getDoc());
                                                    usu.setSaldo(usu.getSaldo()+(pro.getQuantidade()*pro.getValor_uni()));
                                                    new UsuarioDAO().atualizar(usu);
                                                    new PropriedadeDAO().atualizar(pro, op);
                                                    ofe.setQuantidade(0);
                                                    new OfertasDAO().atualizar(ofe);
                                                    pro.setQuantidade(quant-pro.getQuantidade());
                                                }
                                            }
                                        } 
                                    }
                                    
                                }
                                

                            }
                            if(pro.getQuantidade()!=0)
                            {
                                Ofertas ofefi = new Ofertas();
                                ofefi.setCpf_user(pp.getDoc());
                                ofefi.setId_empresa(id_emp);
                                ofefi.setQuantidade(pro.getQuantidade());
                                ofefi.setTipo(op);
                                ofefi.setValor(atu.getValor());
                                new OfertasDAO().inserir(ofefi);
                            }
                            
                            
                        }
                        else
                        {
                            Ofertas ofefi = new Ofertas();
                            ofefi.setCpf_user(pp.getDoc());
                            ofefi.setId_empresa(id_emp);
                            ofefi.setQuantidade(pro.getQuantidade());
                            ofefi.setTipo(op);
                            ofefi.setValor(atu.getValor());
                            new OfertasDAO().inserir(ofefi);
                        }
                        JOptionPane.showMessageDialog(
                            null,
                            "OFERTA POSTADA!",
                            "OFERTA",
                            JOptionPane.INFORMATION_MESSAGE
                        );
                        this.dispose();
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(
                    null,
                    "SENHA INCORRETA!",
                    "VALIDAÇÃO",
                    JOptionPane.ERROR_MESSAGE
                    );
                }
            }
        }
    }
    
    
    private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("QUANTIDADE");
        m.addColumn("VALOR");
        
        tbCompras.setModel(m);
        tbVendas.setModel(m);
    }
    
    private void preencherTabelaOfertas(List<Ofertas> comp, List<Ofertas> vend) {
        if (comp != null) {
            if (comp.size() > 0) {
                DefaultTableModel m = (DefaultTableModel)tbCompras.getModel();
                for(Ofertas com : comp){
                    m.addRow(new Object[]
                        {
                            com.getId_empresa(),
                            com.getQuantidade()
                        }
                    );
                }
                tbCompras.setModel(m);
            } else {
                configurarTabela();
            }
        } 
        if (vend != null) {
            if (vend.size() > 0) {
                DefaultTableModel m = (DefaultTableModel)tbVendas.getModel();
                for(Ofertas ven : vend){
                    m.addRow(new Object[]
                        {
                            ven.getId_empresa(),
                            ven.getQuantidade()
                        }
                    );
                }
                tbVendas.setModel(m);
            } else {
                configurarTabela();
            }
        }
       
        
    }
    
    
    
    
    
}
